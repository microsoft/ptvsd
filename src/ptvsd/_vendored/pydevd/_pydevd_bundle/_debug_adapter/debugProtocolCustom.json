{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"title": "Custom Debug Adapter Protocol",
	"description": "Extension to the DAP to support additional features.",
	"type": "object",


	"definitions": {

		"SetDebuggerPropertyRequest": {
			"allOf": [ { "$ref": "#/definitions/Request" }, {
				"type": "object",
				"description": "The request can be used to enable or disable debugger features.",
				"properties": {
					"command": {
						"type": "string",
						"enum": [ "setDebuggerProperty" ]
					},
					"arguments": {
						"$ref": "#/definitions/SetDebuggerPropertyArguments"
					}
				},
				"required": [ "command", "arguments" ]
			}]
		},
		"SetDebuggerPropertyArguments": {
			"type": "object",
			"description": "Arguments for 'setDebuggerProperty' request.",
			"properties": {
				"ideOS": {
					"type": [ "string" ],
					"description": "OS where the ide is running. Supported values [Windows, Linux]"
				},
				"dontTraceStartPatterns": {
					"type": [ "array" ],
					"description": "Patterns to match with the start of the file paths. Matching paths will be added to a list of file where trace is ignored."
				},
				"dontTraceEndPatterns": {
					"type": [ "array" ],
					"description": "Patterns to match with the end of the file paths. Matching paths will be added to a list of file where trace is ignored."
				},
				"skipSuspendOnBreakpointException": {
					"type": [ "array" ],
					"description": "List of exceptions that should be skipped when doing condition evaluations."
				},
				"skipPrintBreakpointException": {
					"type": [ "array" ],
					"description": "List of exceptions that should skip printing to stderr when doing condition evaluations."
				},
				"multiThreadsSingleNotification": {
					"type": [ "boolean" ],
					"description": "If false then a notification is generated for each thread event. If true a single event is gnenerated, and all threads follow that behavior."
				}
			}
		},
		"SetDebuggerPropertyResponse": {
			"allOf": [ { "$ref": "#/definitions/Response" }, {
				"type": "object",
				"description": "Response to 'setDebuggerProperty' request. This is just an acknowledgement, so no body field is required."
			}]
		},

		"PydevdInputRequestedEvent": {
			"allOf": [ { "$ref": "#/definitions/Event" }, {
				"type": "object",
				"description": "The event indicates input was requested by debuggee.",
				"properties": {
					"event": {
						"type": "string",
						"enum": [ "pydevdInputRequested" ]
					}
				},
				"required": [ "event" ]
			}]
		}

	}
}